net <- neuralnet(formula,train, hidden=10, threshold=0.01)
library(lubridate)
library(neuralnet)
net <- neuralnet(formula,train, hidden=10, threshold=0.01)
#setwd("~/git/GTMachineLearning_Assignment_1")
setwd("~/class/GTMachineLearning_Assignment_1")
#https://www.kaggle.com/c/bike-sharing-demand/data?test.csv
#http://brandonharris.io/kaggle-bike-sharing/
#read in train/test
train <- read.csv("train.csv")
test <- read.csv("test.csv")
str(train)
#factorize training set
train_factor <- train
train_factor$weather <- factor(train$weather)
train_factor$holiday <- factor(train$holiday)
train_factor$workingday <- factor(train$workingday)
train_factor$season <- factor(train$season)
#factorize test set
test_factor <- test
test_factor$weather <- factor(test$weather)
test_factor$holiday <- factor(test$holiday)
test_factor$workingday <- factor(test$workingday)
test_factor$season <- factor(test$season)
#create time column by stripping out timestamp
train_factor$time <- substring(train$datetime,12,20)
test_factor$time <- substring(test$datetime,12,20)
#factorize new timestamp column
train_factor$time <- factor(train_factor$time)
test_factor$time <- factor(test_factor$time)
#create day of week column
train_factor$day <- weekdays(as.Date(train_factor$datetime))
train_factor$day <- as.factor(train_factor$day)
test_factor$day <- weekdays(as.Date(test_factor$datetime))
test_factor$day <- as.factor(test_factor$day)
aggregate(train_factor[,"count"],list(train_factor$day),mean)
#create Sunday variable
train_factor$sunday[train_factor$day == "Sunday"] <- "1"
train_factor$sunday[train_factor$day != "1"] <- "0"
test_factor$sunday[test_factor$day == "Sunday"] <- "1"
test_factor$sunday[test_factor$day != "1"] <- "0"
#convert to factor
train_factor$sunday <- as.factor(train_factor$sunday)
test_factor$sunday <- as.factor(test_factor$sunday)
#convert time and create $hour as integer to evaluate for daypart
train_factor$hour<- as.numeric(substr(train_factor$time,1,2))
test_factor$hour<- as.numeric(substr(test_factor$time,1,2))
#create daypart column, default to 4 to make things easier for ourselves
train_factor$daypart <- "4"
test_factor$daypart <- "4"
#4AM - 10AM = 1
train_factor$daypart[(train_factor$hour < 10) & (train_factor$hour > 3)] <- 1
test_factor$daypart[(test_factor$hour < 10) & (test_factor$hour > 3)] <- 1
#11AM - 3PM = 2
train_factor$daypart[(train_factor$hour < 16) & (train_factor$hour > 9)] <- 2
test_factor$daypart[(test_factor$hour < 16) & (test_factor$hour > 9)] <- 2
#4PM - 9PM = 3
train_factor$daypart[(train_factor$hour < 22) & (train_factor$hour > 15)] <- 3
test_factor$daypart[(test_factor$hour < 22) & (test_factor$hour > 15)] <- 3
#convert daypart to factor
train_factor$daypart <- as.factor(train_factor$daypart)
test_factor$daypart <- as.factor(test_factor$daypart)
#convert hour back to factor
train_factor$hour <- as.factor(train_factor$hour)
test_factor$hour <- as.factor(test_factor$hour)
formula <- count ~ season + holiday + workingday + weather + temp + atemp + humidity
#install.packages("lubridate")
#install.packages("neuralnet")
library(lubridate)
library(neuralnet)
net <- neuralnet(formula,train_factor, hidden=10, threshold=0.01)
trainmat <- model.matrix(count~season+workingday+weather+year+hour+day,data=train)
#setwd("~/git/GTMachineLearning_Assignment_1")
setwd("~/class/GTMachineLearning_Assignment_1")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
#make hour a separate variable
train$hour <- hour(train$datetime)
test$hour <- hour(test$datetime)
#make day a separate variable
train$day <- wday(train$datetime)
test$day <- wday(test$datetime)
#make year a separate variable
train$year <- year(train$datetime)
test$year <- year(test$datetime)
#write code to look for weather 4
train$weather[train$weather == 4]
test$weather[test$weather == 4]
train$weather[train$weather==4] <- 3
test$weather[test$weather==4] <- 3
train$season <- as.factor(train$season)
test$season <- as.factor(test$season)
train$workingday <- as.factor(train$workingday)
test$workingday <- as.factor(test$workingday)
train$weather <- as.factor(train$weather)
test$weather <- as.factor(test$weather)
train$year <- as.factor(train$year)
test$year <- as.factor(test$year)
train$day <- as.factor(train$day)
test$day <- as.factor(test$day)
train$hour <- as.factor(train$hour)
test$hour <- as.factor(test$hour)
trainmat <- model.matrix(count~season+workingday+weather+year+hour+day,data=train)
testmat <- model.matrix(~season+workingday+weather+year+hour+day,data=test)
trainmat <- as.data.frame(trainmat)
testmat <- as.data.frame(testmat)
count <- train$count/1000
#add count to trainmat
trainmat <- cbind(trainmat,count)
#Write formula
formula <- count ~ season2+season3+season4+workingday1+weather2+weather3+year2012+hour1+hour2+hour3+hour4+hour5+hour6+hour7+hour8+hour9+hour10+hour11+hour12+hour13+hour14+hour15+hour16+hour17+hour18+hour19+hour20+hour21+hour22+hour23+day2+day3+day4+day5+day6+day7
#train your data.  note that this is a neural network with 5 hidden layers of 7, 8, 9, 8, and 7 respectively.
fit <- neuralnet(formula,data=trainmat,hidden=c(7,8,9,8,7),threshold=.04,stepmax=1e+06,learningrate=.001,algorithm=”rprop+”,lifesign=”full”,likelihood=T)
fit <- neuralnet(formula,data=trainmat,hidden=c(7,8,9,8,7),threshold=.04,stepmax=1e+06,learningrate=.001,algorithm="rprop+",lifesign="full",likelihood=T)
fit
